#!/usr/bin/env python
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shop.settings')
django.setup()

from django.contrib.auth import get_user_model
from django.test import Client
from django.urls import reverse
from main.models import Category, Product
from reviews.models import Review

User = get_user_model()

def test_registration_and_login():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞...")
    
    client = Client()
    
    # –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    print("   üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    response = client.get(reverse('accounts:register'))
    assert response.status_code == 200, "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
    
    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    print("   üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞...")
    response = client.get(reverse('accounts:login'))
    assert response.status_code == 200, "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
    
    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    login_data = {
        'username': 'user1@shop.ru',
        'password': 'password123'
    }
    response = client.post(reverse('accounts:login'), login_data)
    assert response.status_code == 302, "–í—Ö–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    print("   ‚úÖ –í—Ö–æ–¥ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç –≤—ã—Ö–æ–¥–∞
    response = client.get(reverse('accounts:logout'))
    assert response.status_code == 302, "–í—ã—Ö–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    print("   ‚úÖ –í—ã—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç")

def test_reviews_system():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∑—ã–≤–æ–≤...")
    
    client = Client()
    
    # –í—Ö–æ–¥–∏–º –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    client.post(reverse('accounts:login'), {
        'username': 'user1@shop.ru',
        'password': 'password123'
    })
    
    # –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–∑—ã–≤–æ–≤
    product = Product.objects.first()
    response = client.get(reverse('reviews:review_list', args=[product.id]))
    assert response.status_code == 200, "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
    
    # –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
    response = client.get(reverse('reviews:add_review', args=[product.id]))
    if response.status_code == 200:
        print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
    elif response.status_code == 302:
        print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–∑—ã–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
    else:
        print(f"   ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {response.status_code})")
        return
    
    # –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –æ—Å—Ç–∞–≤–ª—è–ª –æ—Ç–∑—ã–≤)
    if response.status_code == 200:
        review_data = {
            'rating': 5,
            'title': '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤',
            'comment': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.'
        }
        response = client.post(reverse('reviews:add_review', args=[product.id]), review_data)
        if response.status_code == 302:
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: {response.status_code})")
    else:
        print("   ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ (–æ—Ç–∑—ã–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")

def test_ban_system():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –±–∞–Ω–æ–≤...")
    
    client = Client()
    
    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –∑–∞–±–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login_data = {
        'username': 'banned@shop.ru',
        'password': 'password123'
    }
    response = client.post(reverse('accounts:login'), login_data)
    assert response.status_code == 200, "–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏"
    print("   ‚úÖ –ó–∞–±–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–Ω–µ
    assert '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' in response.content.decode(), "–°–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–Ω–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
    print("   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")

def test_database_integrity():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏
    user = User.objects.get(username='user1')
    reviews = Review.objects.filter(user=user)
    assert reviews.exists(), "–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    print("   ‚úÖ –°–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–æ—Ç–∑—ã–≤—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    product = Product.objects.first()
    product_reviews = product.reviews.all()
    assert product_reviews.exists(), "–û—Ç–∑—ã–≤—ã —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    print("   ‚úÖ –°–≤—è–∑–∏ —Ç–æ–≤–∞—Ä-–æ—Ç–∑—ã–≤—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    category = Category.objects.first()
    category_products = category.products.all()
    assert category_products.exists(), "–¢–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    print("   ‚úÖ –°–≤—è–∑–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è-—Ç–æ–≤–∞—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç")

def test_admin_functionality():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∫–∏...")
    
    client = Client()
    
    # –í—Ö–æ–¥–∏–º –∫–∞–∫ –∞–¥–º–∏–Ω
    client.post(reverse('accounts:login'), {
        'username': 'admin@shop.ru',
        'password': 'password123'
    })
    
    # –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ
    response = client.get('/admin/')
    assert response.status_code == 200, "–ê–¥–º–∏–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    print("   ‚úÖ –ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
    
    # –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ
    response = client.get('/admin/accounts/user/')
    assert response.status_code == 200, "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–∑—ã–≤–æ–≤ –≤ –∞–¥–º–∏–Ω–∫–µ
    response = client.get('/admin/reviews/review/')
    assert response.status_code == 200, "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∑—ã–≤–æ–≤ –≤ –∞–¥–º–∏–Ω–∫–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    print("=" * 60)
    
    try:
        test_database_integrity()
        print()
        test_registration_and_login()
        print()
        test_reviews_system()
        print()
        test_ban_system()
        print()
        test_admin_functionality()
        print()
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        return False
    
    return True

if __name__ == '__main__':
    main()
